// ---- –î–û–î–ê–¢–ö–û–í–Ü –•–ï–õ–ü–ï–†–ò –î–õ–Ø –Ü–ó–û–ë–†–ê–ñ–ï–ù–¨ ----
function detectImageLine(line) {
  // –ø—ñ–¥—Ç—Ä–∏–º—É—î —Ñ–æ—Ä–º–∞—Ç–∏:
  // ![](images/foo.png)  –∞–±–æ  image: images/foo.png
  const mdMatch = line.match(/^!\[\]\((.+\.(png|jpe?g|webp|gif))\)$/i);
  if (mdMatch) return mdMatch[1].trim();
  const kvMatch = line.match(/^image:\s*(.+\.(png|jpe?g|webp|gif))$/i);
  if (kvMatch) return kvMatch[1].trim();
  return null;
}

// ---- –û–ù–û–í–õ–ï–ù–ê parseTextBlocks: —Ä–æ–∑–ø—ñ–∑–Ω–∞—î image-—Ä—è–¥–∫–∏ —ñ –≤–∏—Ç—è–≥—É—î —ó—Ö —É –ø–æ–ª–µ images: [] ----
function parseTextBlocks(raw) {
  const blocks = raw.split(/(?=üì°)/g).map(b => b.trim()).filter(Boolean);
  return blocks.map(block => {
    const lines = block.split('\n').map(l => l.trim()).filter(Boolean);
    const title = lines.shift();
    let speaker = '';
    if (lines[0] && lines[0].startsWith('üéô')) {
      speaker = lines.shift().replace('üéô', '').trim();
    }
    const images = [];
    const dialog = [];
    lines.forEach(l => {
      const img = detectImageLine(l);
      if (img) {
        images.push(img);
        return;
      }
      if (l.startsWith('‚Äî')) {
        const raw = l.replace(/^‚Äî\s*/, '');
        const m = raw.match(/^([^:]{1,60}):\s*(.*)$/);
        if (m) dialog.push({ name: m[1].trim(), text: m[2].trim() });
        else dialog.push({ name: null, text: raw });
      } else {
        dialog.push({ name: null, text: l });
      }
    });
    return { title, speaker, images, dialog };
  });
}

// ---- –ü–†–ò–°–¢–û–°–£–í–ê–ù–ù–Ø renderPostsFromData: —è–∫—â–æ –±–ª–æ–∫ –º–∞—î images[], —Ä–µ–Ω–¥–µ—Ä–∏—Ç—å —ó—Ö –Ω–∞–¥ dialog ----
// –£—Å–µ—Ä–µ–¥–∏–Ω—ñ renderPostsFromData –∞–±–æ render() –ø—Ä–∏ –ø–µ—Ä–µ–±–æ—Ä—ñ –±–ª–æ–∫—ñ–≤:
// –∑–∞–º—ñ–Ω—é—î–º–æ –æ—Ç—Ä–∏–º–∞–Ω–Ω—è block.dialog –Ω–∞ –≤–∂–µ –æ–Ω–æ–≤–ª–µ–Ω—É —Å—Ç—Ä—É–∫—Ç—É—Ä—É –∑ parseTextBlocks
// –ø—Ä–∏–∫–ª–∞–¥ (–≤—Å—Ç–∞–≤–∏—Ç–∏ –∑–∞–º—ñ—Å—Ç—å —á–∞—Å—Ç–∏–Ω–∏, –¥–µ —Å—Ç–≤–æ—Ä—é—î—Ç—å—Å—è article/post):
// ...
// —è–∫—â–æ block.images && block.images.length > 0 => —Ä–µ–Ω–¥–µ—Ä
if (Array.isArray(block.images) && block.images.length) {
  const gallery = document.createElement('div');
  gallery.className = 'post-images';
  block.images.forEach(src => {
    const wrap = document.createElement('div');
    wrap.className = 'post-image-wrap';
    const img = document.createElement('img');
    img.loading = 'lazy';
    img.alt = block.title || '–≠—Ñ–∏—Ä–Ω—ã–π —Å–∫—Ä–∏–Ω';
    img.src = src;
    // –≤—Å—Ç–∞–Ω–æ–≤–ª—é—î–º–æ –¥–æ–¥–∞—Ç–∫–æ–≤—ñ –∞—Ç—Ä–∏–±—É—Ç–∏ –¥–ª—è –æ–±—Ä–æ–±–∫–∏ –ø–æ–º–∏–ª–æ–∫
    img.addEventListener('error', () => {
      wrap.classList.add('image-error');
      img.style.display = 'none';
    });
    wrap.appendChild(img);
    gallery.appendChild(wrap);
  });
  post.appendChild(gallery);
}
// ...
// –¥–∞–ª—ñ –¥–æ–¥–∞—î–º–æ –¥—ñ–∞–ª–æ–≥–Ω–∏–π –±–ª–æ–∫ —è–∫ —Ä–∞–Ω—ñ—à–µ
